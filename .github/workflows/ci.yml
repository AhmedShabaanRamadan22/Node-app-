name: CI/CD Pipeline

on:
  push:
    branches:
    - main
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  sonar-scan-and-gate:
    name: SonarQube Scan & Quality Gate
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Run SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v6
      with:
        projectBaseDir: ./
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}

    - name: Check SonarQube Quality Gate
      id: quality_gate
      uses: SonarSource/sonarqube-quality-gate-action@v1
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      continue-on-error: true

    - name: Fail if Quality Gate failed
      env:
        SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        QUALITY_OUTCOME: ${{ steps.quality_gate.outcome }}
      run: |
        PROJECT_URL="$SONAR_HOST_URL/dashboard?id=$SONAR_PROJECT_KEY"
        if [ "$QUALITY_OUTCOME" != "success" ]; then
          echo "ðŸš¨ Quality Gate **FAILED**! Please check SonarQube ðŸ‘‰ [$PROJECT_URL]($PROJECT_URL)" >> "$GITHUB_STEP_SUMMARY"
          echo "ðŸš¨ Quality Gate FAILED! Please check SonarQube: $PROJECT_URL"
          exit 1
        else
          echo "âœ… Quality Gate **PASSED** ðŸŽ‰ [View Report here]($PROJECT_URL)" >> "$GITHUB_STEP_SUMMARY"
          echo "âœ… Quality Gate PASSED. View details at: $PROJECT_URL"

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: sonar-scan-and-gate

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test || echo "No tests available"

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/node-app:latest
