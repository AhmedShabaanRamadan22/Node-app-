name: CI/CD Pipeline

on:
  push:
    branches:
    - main
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  sonar-scan-and-gate:
    name: SonarQube Scan & Quality Gate
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Needed for SonarQube to compare new code with previous commits

    # Run SonarQube Scan
    - name: Run SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v6
      with:
        projectBaseDir: ./ # Change this if your code is in a subfolder
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    # Check SonarQube Quality Gate
    - name: Check SonarQube Quality Gate
      uses: SonarSource/sonarqube-quality-gate-action@v1
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: sonar-scan-and-gate # Only runs if the Quality Gate passed

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test || echo "No tests available"

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/node-app:latest
